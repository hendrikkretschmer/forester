{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hendrikkretschmer/foresterapp/forester/src/components/Slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Slider.css';\nimport image_1 from '../images/image_1.jpg';\nimport arrow_left from \"../images/arrow_icon_left_black.svg\";\nimport arrow_right from \"../images/arrow_icon_right_black.svg\";\nimport forestData from './ForestData';\n\nfunction Slider() {\n  _s();\n\n  const [index, setIndex] = useState(0);\n  const [forest, setForest] = useState([]);\n\n  const slideRight = () => {\n    setIndex((index + 1) % forest.length);\n  };\n\n  const slideLeft = () => {\n    if (index - 1 < 0) {\n      setIndex(0);\n    } else {\n      setIndex(index - 1);\n    }\n  };\n\n  useEffect(() => {\n    setForest(forestData);\n  }, []); // dependency array: empty array -> run once\n\n  function clickMe(category) {\n    setForest(forestData.filter(forest => forest.forest === category));\n  }\n\n  console.log(index);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider__card--wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__allbuttons--container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: slideLeft,\n          className: \"buttonbox__left\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: arrow_left,\n            alt: \"arrow_left\",\n            className: \"button__icon--left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: slideRight,\n          className: \"buttonbox__right\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: arrow_right,\n            alt: \"arrow_right\",\n            className: \"button__icon--right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), forest[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"main__image\",\n          src: forest[index].img,\n          alt: \"image_1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider__title--wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"forest__title\",\n            children: forest[index].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"forest__text\",\n            children: forest[index].text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Slider, \"bKr/DdwSpStw8TUx/68Gv9SysB8=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/Users/hendrikkretschmer/foresterapp/forester/src/components/Slider.js"],"names":["React","useState","useEffect","image_1","forestData","Slider","index","setIndex","forest","setForest","slideRight","length","slideLeft","clickMe","category","filter","console","log","arrow_left","arrow_right","img","name","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAGA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMS,UAAU,GAAG,MAAM;AACvBH,IAAAA,QAAQ,CAAC,CAACD,KAAK,GAAG,CAAT,IAAcE,MAAM,CAACG,MAAtB,CAAR;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAIN,KAAK,GAAG,CAAR,GAAY,CAAhB,EAAmB;AACjBC,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACF,GAND;;AAQAJ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS,CAACL,UAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT,CAhBgB,CAkBR;;AAER,WAASS,OAAT,CAAiBC,QAAjB,EAA2B;AACzBL,IAAAA,SAAS,CAACL,UAAU,CAACW,MAAX,CAAmBP,MAAD,IAAYA,MAAM,CAACA,MAAP,KAAkBM,QAAhD,CAAD,CAAT;AACD;;AAGHE,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA,gCAEQ;AAAQ,UAAA,OAAO,EAAEM,SAAjB;AAA4B,UAAA,SAAS,EAAC,iBAAtC;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEM,UAAV;AAAsB,YAAA,GAAG,EAAC,YAA1B;AAAuC,YAAA,SAAS,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFR,eAMQ;AAAQ,UAAA,OAAO,EAAER,UAAjB;AAA6B,UAAA,SAAS,EAAC,kBAAvC;AAAA,iCACE;AAAK,YAAA,GAAG,EAAES,WAAV;AAAuB,YAAA,GAAG,EAAC,aAA3B;AAAyC,YAAA,SAAS,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANR;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAgBMX,MAAM,CAACF,KAAD,CAAN,iBACA;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,GAAG,EAAEE,MAAM,CAACF,KAAD,CAAN,CAAcc,GAAhD;AAAqD,UAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA,sBAA+BZ,MAAM,CAACF,KAAD,CAAN,CAAce;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAG,YAAA,SAAS,EAAC,cAAb;AAAA,sBAA6Bb,MAAM,CAACF,KAAD,CAAN,CAAcgB;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD;;GApFQjB,M;;KAAAA,M;AAsFT,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './Slider.css';\nimport image_1 from '../images/image_1.jpg';\nimport arrow_left from '../images/arrow_icon_left_black.svg';\nimport arrow_right from '../images/arrow_icon_right_black.svg';\nimport forestData from './ForestData';\n\n\nfunction Slider() {\n  const [index, setIndex] = useState(0);\n  const [forest, setForest] = useState([]);\n\n  const slideRight = () => {\n    setIndex((index + 1) % forest.length);\n  }\n\n  const slideLeft = () => {\n    if (index - 1 < 0) {\n      setIndex(0)\n    } else {\n      setIndex(index - 1);\n    }\n  }\n\n  useEffect(() => {\n    setForest(forestData);\n  }, []); // dependency array: empty array -> run once\n\n  function clickMe(category) {\n    setForest(forestData.filter((forest) => forest.forest === category));\n  }\n\n\nconsole.log(index)\n  return (\n    <div className=\"App\">\n      \n      <div className=\"slider__card--wrapper\">\n        \n          <div className=\"slider__allbuttons--container\">\n            \n                  <button onClick={slideLeft} className=\"buttonbox__left\">\n                    <img src={arrow_left} alt=\"arrow_left\" className=\"button__icon--left\"/>\n                  </button>\n\n                  <button onClick={slideRight} className=\"buttonbox__right\">\n                    <img src={arrow_right} alt=\"arrow_right\" className=\"button__icon--right\"/>\n                  </button>\n          \n          </div>\n\n          {/* ///////////////////////////////////////////// */}\n\n          { forest[index] && (\n            <div className=\"slider__container\">\n              <img className=\"main__image\" src={forest[index].img} alt=\"image_1\"/>\n              \n              <div className=\"slider__title--wrapper\">\n                <h3 className=\"forest__title\">{forest[index].name}</h3>\n              \n                <p className=\"forest__text\">{forest[index].text}</p>\n              </div>\n              {/*<h2>Index: {index}</h2>*/}\n            </div>\n          )}\n\n\n\n          {/*\n          <div className=\"forest__card--output\">\n          {forest.map((forest) => (\n          \n                  <div className=\"image\">\n                      <img src={image_1} width=\"500\" height=\"500\" alt=\"image_1\" />\n                  </div>\n                  \n                  <h1 key={treasure.id}>{forest.name}</h1>\n\n                  <div className=\"text\">\n                  <p key={treasure.id}>{treasure.text}</p>\n                  </div>\n                      \n                  )\n\n        </div>\n          */}\n      \n    \n    \n      </div>\n    </div>\n  );\n}\n\nexport default Slider;"]},"metadata":{},"sourceType":"module"}